version: "3.8"

services:

  # Redis
  redis:
    image: redis:alpine
    restart: always
    container_name: redis

  # Database Postgres
  db:
    image: postgres
    # restart: always
    container_name: postgresql_db
    volumes:
      - pgdb-data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    # networks:
    #   app_net:
    #     ipv4_address: 192.168.0.2
  
  # Pg admin
  pgadin:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    env_file:
      - .env
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - 5000:80
    depends_on:
      - db
    # networks:
    #   app_net:
    #     ipv4_address: 192.168.0.3

  # Django App
  web:
    build:
      context: .
    volumes:
      - ./:/app
    ports:
      - 8000:8000
    container_name: dj_app
    image: "dj_app"
    restart: always
    depends_on:
      - db
  
  # Celery
  celery:
    restart: always
    build:
      context: .
    # command: celery -A core worker -l DEBUG
    volumes:
      - ./:/app
    container_name: celery
    depends_on:
      - db
      - redis
      - app

volumes:
  pgdb-data:
  pgadmin-data:


  
# networks:
#   app_net:
#     ipam:
#       driver: default
#       config:
#         - subnet: "192.168.0.0/24"
#           gateway: 192.168.0.1